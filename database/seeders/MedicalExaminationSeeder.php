<?php

namespace Database\Seeders;

use App\Models\ExaminationRoom;
use App\Models\MedicalExamination;
use App\Models\MedicalService;
use App\Models\Patient;
use App\Models\Queue;
use App\Models\User;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use Illuminate\Support\Carbon;

class MedicalExaminationSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // ‡∫Å‡∫ß‡∫î‡∫™‡∫≠‡∫ö‡∫ß‡ªà‡∫≤‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫û‡∫∑‡ªâ‡∫ô‡∫ñ‡∫≤‡∫ô‡∫ö‡ªç
        $patients = Patient::all();
        $queues = Queue::all();
        $services = MedicalService::all();
        $rooms = ExaminationRoom::all();
        $doctors = User::where('role', 'doctor')->get();
        $nurses = User::where('role', 'nurse')->get();

        if ($patients->isEmpty() || $services->isEmpty()) {
            $this->command->warn('‚ö†Ô∏è  ‡∫Å‡∫∞‡∫•‡∫∏‡∫ô‡∫≤ run Patient ‡ªÅ‡∫•‡∫∞ MedicalService seeders ‡∫Å‡ªà‡∫≠‡∫ô!');
            return;
        }

        $this->command->info('ü©∫ ‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫™‡ªâ‡∫≤‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î...');

        // ‡∫™‡ªâ‡∫≤‡∫á‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î 10 ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô
        $examinations = [
            [
                'service_type' => 'laboratory',
                'status' => 'completed',
                'days_ago' => 7,
                'vital_signs' => [
                    'weight' => 65.5,
                    'blood_pressure' => '120/80',
                    'temperature' => 36.8,
                    'heart_rate' => 75,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ô‡∫ª‡∫Å',
                    'recorded_at' => Carbon::now()->subDays(7)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'glucose' => 95,
                    'cholesterol' => 180,
                    'hemoglobin' => 13.5,
                    'white_blood_cells' => 7500,
                    'conclusion' => '‡∫ú‡∫ª‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥'
                ]
            ],
            [
                'service_type' => 'examination',
                'status' => 'completed',
                'days_ago' => 5,
                'vital_signs' => [
                    'weight' => 72.0,
                    'blood_pressure' => '130/85',
                    'temperature' => 37.1,
                    'heart_rate' => 82,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡ªÅ‡∫Å‡ªâ‡∫ß',
                    'recorded_at' => Carbon::now()->subDays(5)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'physical_exam' => '‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫≠‡∫≤‡∫Å‡∫≤‡∫ô‡∫ú‡∫¥‡∫î‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
                    'symptoms' => '‡∫≠‡∫≤‡∫Å‡∫≤‡∫ô‡ªÑ‡∫Ç‡ªâ‡ªÄ‡∫•‡∫±‡∫Å‡∫ô‡ªâ‡∫≠‡∫ç',
                    'diagnosis' => '‡∫´‡∫ß‡∫±‡∫î‡∫ó‡∫ª‡ªà‡∫ß‡ªÑ‡∫õ',
                    'recommendations' => '‡∫û‡∫±‡∫Å‡∫ú‡ªà‡∫≠‡∫ô‡ªÅ‡∫•‡∫∞‡∫î‡∫∑‡ªà‡∫°‡∫ô‡ªâ‡∫≥‡ªÄ‡∫ç‡∫≠‡∫∞'
                ]
            ],
            [
                'service_type' => 'imaging',
                'status' => 'completed',
                'days_ago' => 3,
                'vital_signs' => [
                    'weight' => 58.3,
                    'blood_pressure' => '110/70',
                    'temperature' => 36.5,
                    'heart_rate' => 68,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ö‡∫ª‡∫ß',
                    'recorded_at' => Carbon::now()->subDays(3)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'imaging_type' => 'Ultrasound',
                    'findings' => '‡∫≠‡∫∞‡ªÑ‡∫ß‡∫ç‡∫∞‡∫ß‡∫∞‡∫û‡∫≤‡∫ç‡ªÉ‡∫ô‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
                    'impression' => '‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫Ñ‡∫ß‡∫≤‡∫°‡∫ú‡∫¥‡∫î‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
                    'recommendation' => '‡∫ï‡∫¥‡∫î‡∫ï‡∫≤‡∫°‡∫≠‡∫≤‡∫Å‡∫≤‡∫ô'
                ]
            ],
            [
                'service_type' => 'examination',
                'status' => 'in_progress',
                'days_ago' => 0,
                'vital_signs' => [
                    'weight' => 80.2,
                    'blood_pressure' => '140/90',
                    'temperature' => 36.9,
                    'heart_rate' => 88,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ô‡∫ª‡∫Å',
                    'recorded_at' => Carbon::now()->format('Y-m-d H:i:s')
                ],
                'results' => null
            ],
            [
                'service_type' => 'laboratory',
                'status' => 'pending',
                'days_ago' => 0,
                'vital_signs' => [
                    'weight' => 62.8,
                    'blood_pressure' => '115/75',
                    'temperature' => 36.7,
                    'heart_rate' => 72,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡ªÅ‡∫Å‡ªâ‡∫ß',
                    'recorded_at' => Carbon::now()->format('Y-m-d H:i:s')
                ],
                'results' => null
            ],
            [
                'service_type' => 'procedure',
                'status' => 'completed',
                'days_ago' => 10,
                'vital_signs' => [
                    'weight' => 75.5,
                    'blood_pressure' => '125/82',
                    'temperature' => 36.6,
                    'heart_rate' => 78,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ö‡∫ª‡∫ß',
                    'recorded_at' => Carbon::now()->subDays(10)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'procedure_name' => '‡∫Å‡∫≤‡∫ô‡ªÄ‡∫à‡∫≤‡∫∞‡ªÄ‡∫≠‡∫ª‡∫≤‡ªÄ‡∫•‡∫∑‡∫≠‡∫î',
                    'duration' => '15 ‡∫ô‡∫≤‡∫ó‡∫µ',
                    'complications' => '‡∫ö‡ªç‡ªà‡∫°‡∫µ',
                    'outcome' => '‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡∫î‡∫µ'
                ]
            ],
            [
                'service_type' => 'examination',
                'status' => 'completed',
                'days_ago' => 2,
                'vital_signs' => [
                    'weight' => 67.3,
                    'blood_pressure' => '118/78',
                    'temperature' => 37.2,
                    'heart_rate' => 85,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ô‡∫ª‡∫Å',
                    'recorded_at' => Carbon::now()->subDays(2)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'chief_complaint' => '‡∫õ‡∫ß‡∫î‡∫´‡∫ª‡∫ß',
                    'physical_exam' => '‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫ó‡∫ª‡ªà‡∫ß‡ªÑ‡∫õ‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
                    'assessment' => '‡∫õ‡∫ß‡∫î‡∫´‡∫ª‡∫ß‡∫ï‡∫∂‡∫á‡ªÄ‡∫Ñ‡∫±‡ªà‡∫á',
                    'plan' => '‡∫¢‡∫≤‡ªÅ‡∫Å‡ªâ‡∫õ‡∫ß‡∫î‡ªÅ‡∫•‡∫∞‡∫û‡∫±‡∫Å‡∫ú‡ªà‡∫≠‡∫ô'
                ]
            ],
            [
                'service_type' => 'imaging',
                'status' => 'completed',
                'days_ago' => 14,
                'vital_signs' => [
                    'weight' => 55.8,
                    'blood_pressure' => '105/65',
                    'temperature' => 36.4,
                    'heart_rate' => 65,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡ªÅ‡∫Å‡ªâ‡∫ß',
                    'recorded_at' => Carbon::now()->subDays(14)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'imaging_type' => 'X-Ray ‡ªÄ‡∫≠‡∫¥‡∫Å',
                    'findings' => '‡∫õ‡∫≠‡∫î‡∫™‡∫∞‡∫≠‡∫≤‡∫î',
                    'impression' => '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Å‡∫≤‡∫ô‡∫≠‡∫±‡∫Å‡ªÄ‡∫™‡∫ö‡∫´‡∫º‡∫∑‡∫Å‡ªâ‡∫≠‡∫ô',
                    'recommendation' => '‡∫ö‡ªç‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫ï‡∫¥‡∫î‡∫ï‡∫≤‡∫°'
                ]
            ],
            [
                'service_type' => 'laboratory',
                'status' => 'in_progress',
                'days_ago' => 0,
                'vital_signs' => [
                    'weight' => 70.1,
                    'blood_pressure' => '135/88',
                    'temperature' => 36.8,
                    'heart_rate' => 80,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ö‡∫ª‡∫ß',
                    'recorded_at' => Carbon::now()->format('Y-m-d H:i:s')
                ],
                'results' => null
            ],
            [
                'service_type' => 'examination',
                'status' => 'completed',
                'days_ago' => 1,
                'vital_signs' => [
                    'weight' => 78.9,
                    'blood_pressure' => '145/95',
                    'temperature' => 37.0,
                    'heart_rate' => 92,
                    'recorded_by' => '‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô ‡∫ô‡∫ª‡∫Å',
                    'recorded_at' => Carbon::now()->subDays(1)->format('Y-m-d H:i:s')
                ],
                'results' => [
                    'chief_complaint' => '‡ªÄ‡∫°‡∫∑‡ªà‡∫≠‡∫ç‡∫•‡ªâ‡∫≤',
                    'history' => '‡ªÄ‡∫°‡∫∑‡ªà‡∫≠‡∫ç‡∫•‡ªâ‡∫≤‡∫°‡∫≤ 3 ‡∫ß‡∫±‡∫ô',
                    'physical_exam' => '‡∫Ñ‡∫ß‡∫≤‡∫°‡∫î‡∫±‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫î‡∫™‡∫π‡∫á‡ªÄ‡∫•‡∫±‡∫Å‡∫ô‡ªâ‡∫≠‡∫ç',
                    'assessment' => '‡∫Ñ‡∫ß‡∫≤‡∫°‡∫î‡∫±‡∫ô‡ªÄ‡∫•‡∫∑‡∫≠‡∫î‡∫™‡∫π‡∫á‡∫Ç‡∫±‡ªâ‡∫ô 1',
                    'plan' => '‡∫õ‡ªà‡∫Ω‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫¥‡∫ô‡ªÅ‡∫•‡∫∞‡∫≠‡∫≠‡∫Å‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫Å‡∫≤‡∫ç'
                ]
            ]
        ];

        foreach ($examinations as $index => $examData) {
            // ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡ªÅ‡∫ö‡∫ö random
            $patient = $patients->random();
            $service = $services->where('service_category', $examData['service_type'])->first()
                ?? $services->random();
            $room = $rooms->isNotEmpty() ? $rooms->random() : null;
            $queue = $queues->isNotEmpty() ? $queues->random() : null;

            // ‡ªÄ‡∫•‡∫∑‡∫≠‡∫Å‡∫ú‡∫π‡ªâ‡ªÄ‡∫Æ‡∫±‡∫î‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î
            $conductor = $nurses->isNotEmpty() ? $nurses->random() : null;
            $verifier = $doctors->isNotEmpty() ? $doctors->random() : null;

            // ‡∫Å‡∫≥‡∫ô‡∫ª‡∫î‡∫ß‡∫±‡∫ô‡∫ó‡∫µ ‡ªÅ‡∫•‡∫∞ ‡ªÄ‡∫ß‡∫•‡∫≤
            $examinationDate = Carbon::now()->subDays($examData['days_ago']);
            $examinationTime = $examinationDate->copy()->setTime(
                rand(8, 17), // 8:00 - 17:00
                rand(0, 59)
            );

            // ‡∫Å‡∫≥‡∫ô‡∫ª‡∫î timestamps ‡∫ï‡∫≤‡∫°‡∫™‡∫∞‡∫ñ‡∫≤‡∫ô‡∫∞
            $startedAt = null;
            $completedAt = null;
            $verifiedAt = null;

            if (in_array($examData['status'], ['in_progress', 'completed'])) {
                $startedAt = $examinationTime->copy()->addMinutes(rand(5, 15));
            }

            if ($examData['status'] === 'completed') {
                $completedAt = $startedAt->copy()->addMinutes(rand(15, 45));
                if ($verifier) {
                    $verifiedAt = $completedAt->copy()->addMinutes(rand(10, 30));
                }
            }

            // ‡∫™‡ªâ‡∫≤‡∫á‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î
            $examination = MedicalExamination::create([
                'patient_id' => $patient->id,
                'queue_id' => $queue?->id,
                'service_id' => $service->id,
                'room_id' => $room?->id,
                'examination_date' => $examinationDate->toDateString(),
                'examination_time' => $examinationTime->format('H:i'),
                'vital_signs' => $examData['vital_signs'],
                'examination_results' => $examData['results'],
                'status' => $examData['status'],
                'conducted_by' => $conductor?->id,
                'verified_by' => $examData['status'] === 'completed' ? $verifier?->id : null,
                'started_at' => $startedAt,
                'completed_at' => $completedAt,
                'verified_at' => $verifiedAt,
                'notes' => $this->generateNotes($examData['status']),
                'technician_notes' => $conductor ? $this->generateTechnicianNotes() : null,
                'doctor_notes' => ($examData['status'] === 'completed' && $verifier)
                    ? $this->generateDoctorNotes() : null,
                'created_at' => $examinationDate,
                'updated_at' => $verifiedAt ?? $completedAt ?? $startedAt ?? $examinationDate,
            ]);

            $this->command->info("‚úÖ ‡∫™‡ªâ‡∫≤‡∫á‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î #{$examination->id} - {$patient->full_name} - {$service->service_name} ({$examData['status']})");
        }

        $this->command->info('üéâ ‡∫™‡ªâ‡∫≤‡∫á‡∫Ç‡ªç‡ªâ‡∫°‡∫π‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î 10 ‡∫•‡∫≤‡∫ç‡∫Å‡∫≤‡∫ô!');
    }

    /**
     * ‡∫™‡ªâ‡∫≤‡∫á‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î‡∫ó‡∫ª‡ªà‡∫ß‡ªÑ‡∫õ
     */
    private function generateNotes(string $status): ?string
    {
        $notes = [
            'pending' => [
                '‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î',
                '‡∫Å‡∫≥‡∫•‡∫±‡∫á‡ªÄ‡∫ï‡∫£‡∫Ω‡∫°‡∫≠‡∫∏‡∫õ‡∫∞‡∫Å‡∫≠‡∫ô',
                '‡∫•‡ªç‡∫ñ‡ªâ‡∫≤‡∫Ñ‡∫¥‡∫ß',
            ],
            'in_progress' => [
                '‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î',
                '‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡ªÑ‡∫õ‡∫¢‡ªà‡∫≤‡∫á‡∫•‡∫Ω‡∫ö‡∫Æ‡ªâ‡∫≠‡∫ç',
                '‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°‡∫Æ‡ªà‡∫ß‡∫°‡∫°‡∫∑‡∫î‡∫µ',
            ],
            'completed' => [
                '‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î‡ªÅ‡∫•‡ªâ‡∫ß',
                '‡∫ú‡∫ª‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡ªÄ‡∫õ‡∫±‡∫ô‡ªÑ‡∫õ‡∫ï‡∫≤‡∫°‡∫ó‡∫µ‡ªà‡∫Ñ‡∫≤‡∫î‡ªÑ‡∫ß‡ªâ',
                '‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡ªÑ‡∫î‡ªâ‡∫Æ‡∫±‡∫ö‡∫Ñ‡∫≥‡ªÅ‡∫ô‡∫∞‡∫ô‡∫≥‡ªÅ‡∫•‡ªâ‡∫ß',
                '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫Ç‡ªç‡ªâ‡∫™‡∫±‡∫á‡ªÄ‡∫Å‡∫î‡∫û‡∫¥‡ªÄ‡∫™‡∫î',
            ],
            'cancelled' => [
                '‡∫ç‡∫ª‡∫Å‡ªÄ‡∫•‡∫µ‡∫Å‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î',
                '‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡∫ö‡ªç‡ªà‡∫™‡∫≤‡∫°‡∫≤‡∫î‡∫°‡∫≤‡ªÑ‡∫î‡ªâ',
                '‡ªÄ‡∫Ñ‡∫∑‡ªà‡∫≠‡∫á‡∫°‡∫∑‡∫Ç‡∫±‡∫î‡∫Ç‡ªâ‡∫≠‡∫á',
            ]
        ];

        $statusNotes = $notes[$status] ?? $notes['completed'];
        return $statusNotes[array_rand($statusNotes)];
    }

    /**
     * ‡∫™‡ªâ‡∫≤‡∫á‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î‡∫Ç‡∫≠‡∫á‡ªÄ‡∫ó‡∫±‡∫Å‡∫ô‡∫¥‡∫Å/‡∫û‡∫∞‡∫ç‡∫≤‡∫ö‡∫≤‡∫ô
     */
    private function generateTechnicianNotes(): string
    {
        $notes = [
            '‡∫ö‡∫±‡∫ô‡∫ó‡∫∂‡∫Å Vital Signs ‡ªÅ‡∫•‡ªâ‡∫ß',
            '‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫î‡∫≥‡ªÄ‡∫ô‡∫µ‡∫ô‡ªÑ‡∫õ‡∫¢‡ªà‡∫≤‡∫á‡∫•‡∫Ω‡∫ö‡∫Æ‡ªâ‡∫≠‡∫ç',
            '‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°‡∫Æ‡ªà‡∫ß‡∫°‡∫°‡∫∑‡∫î‡∫µ',
            '‡∫≠‡∫∏‡∫õ‡∫∞‡∫Å‡∫≠‡∫ô‡ªÄ‡∫Æ‡∫±‡∫î‡∫ß‡∫Ω‡∫Å‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
            '‡∫ï‡∫ª‡∫ß‡∫¢‡ªà‡∫≤‡∫á‡ªÄ‡∫Å‡∫±‡∫ö‡ªÑ‡∫î‡ªâ‡∫î‡∫µ',
            '‡∫ö‡ªç‡ªà‡∫°‡∫µ‡∫ö‡∫±‡∫ô‡∫´‡∫≤‡ªÉ‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î',
        ];

        return $notes[array_rand($notes)];
    }

    /**
     * ‡∫™‡ªâ‡∫≤‡∫á‡ªù‡∫≤‡∫ç‡ªÄ‡∫´‡∫î‡∫Ç‡∫≠‡∫á‡ªù‡ªç
     */
    private function generateDoctorNotes(): string
    {
        $notes = [
            '‡∫ú‡∫ª‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡∫¢‡∫∑‡∫ô‡∫¢‡∫±‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß',
            '‡∫Å‡∫≤‡∫ô‡∫ß‡∫¥‡ªÄ‡∫Ñ‡∫≤‡∫∞‡∫ú‡∫ª‡∫ô‡∫ñ‡∫∑‡∫Å‡∫ï‡ªâ‡∫≠‡∫á',
            '‡ªÅ‡∫ô‡∫∞‡∫ô‡∫≥‡∫Å‡∫≤‡∫ô‡∫ï‡∫¥‡∫î‡∫ï‡∫≤‡∫°',
            '‡∫ö‡ªç‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫ß‡∫î‡ªÄ‡∫û‡∫µ‡ªà‡∫°‡ªÄ‡∫ï‡∫µ‡∫°',
            '‡∫ú‡∫ª‡∫ô‡∫Å‡∫≤‡∫ô‡∫Å‡∫ß‡∫î‡ªÉ‡∫ô‡ªÄ‡∫Å‡∫ô‡∫õ‡∫ª‡∫Å‡∫Å‡∫∞‡∫ï‡∫¥',
            '‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫≥‡ªÅ‡∫ô‡∫∞‡∫ô‡∫≥‡ªÅ‡∫Å‡ªà‡∫Ñ‡∫ª‡∫ô‡ªÑ‡∫Ç‡ªâ‡ªÅ‡∫•‡ªâ‡∫ß',
        ];

        return $notes[array_rand($notes)];
    }
}
